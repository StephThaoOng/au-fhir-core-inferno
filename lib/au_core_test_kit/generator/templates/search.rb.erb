require_relative '../../../search_test'
require_relative '../../../generator/group_metadata'

module AUCoreTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::Test
      include AUCoreTestKit::SearchTest

      title 'Server returns valid results for <%= resource_type %> search by <%= search_param_name_string %>'
      description %(
<%= description %>
      )

      id :<%= test_id %><% if optional? %>
      optional
  <% end %><% if needs_patient_id? %>
      input :patient_ids,
        title: 'Patient IDs',
        description: 'Comma separated list of patient IDs that in sum contain all MUST SUPPORT elements',
        default: 'bennelong-anne, smith-emma, baby-smith-john, dan-harry, italia-sofia, wang-li'
  <% end %><% if needs_practitioner_id? %>
      input :practitioner_ids,
        title: 'Practitioner IDs',
        description: 'Comma separated list of practitioner IDs that in sum contain all MUST SUPPORT elements',
        default: 'bradley-jill, surgeon-david, nurse-nancy, pharmacist, cardy-igist, levin-henry, sandyson-sandy, bobrester-bob, primary-peter, bobrester-bob-tc-1.21'
  <% end %><% if resource_type == 'Device' %>
      input :implantable_device_codes,
        title: 'Implantable Device Type Code',
        description: 'Enter the code for an Implantable Device type, or multiple codes separated by commas. '\
                    'If blank, Inferno will validate all Device resources against the Implantable Device profile',
        optional: true
  <% end %>
      def self.properties
        @properties ||= SearchTestProperties.new(
  <%= search_test_properties_string %>
        )
      end

      def self.metadata
        @metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, 'metadata.yml'), aliases: true))
      end

      def scratch_resources
        scratch[:<%= profile_identifier %>_resources] ||= {}
      end

      run do
        run_search_test
      end
    end
  end
end
