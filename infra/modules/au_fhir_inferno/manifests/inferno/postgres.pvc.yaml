apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: ${namespace}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inferno-postgres
  namespace: ${namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inferno-postgres
  template:
    metadata:
      labels:
        app: inferno-postgres
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: postgres
        image: postgres:16.2-bullseye
        imagePullPolicy: Always
        ports:
          - containerPort: 5432
        envFrom:
          - secretRef:
              name: postgres-database
        volumeMounts:
          - mountPath: "/data"
            name: postgres-data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
---
apiVersion: v1
kind: Service
metadata:
  name: inferno-postgres
  namespace: ${namespace}
spec:
  type: NodePort
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: inferno-postgres
