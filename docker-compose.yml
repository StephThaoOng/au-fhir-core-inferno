version: '3'
services:
  inferno:
    build:
      context: ./
    volumes:
      - ./data:/opt/inferno/data
      - ./lib/au_core_test_kit:/opt/inferno/lib/au_core_test_kit
    depends_on:
      validator-service:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inferno
      POSTGRES_USER: postgres
  worker:
    build:
      context: ./
    volumes:
      - ./data:/opt/inferno/data
    command: bundle exec sidekiq -r ./worker.rb
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inferno
      POSTGRES_USER: postgres
  validator-service:
    extends:
      file: docker-compose.background.yml
      service: validator-service
  fhir_validator_app:
    extends:
      file: docker-compose.background.yml
      service: fhir_validator_app
  nginx:
    extends:
      file: docker-compose.background.yml
      service: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
  redis:
    extends:
      file: docker-compose.background.yml
      service: redis
  postgres:
    image: postgres:16.2-alpine3.19
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inferno
